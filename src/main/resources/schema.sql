DROP TABLE IF EXISTS films_users;
DROP TABLE IF EXISTS films_directors;
DROP TABLE IF EXISTS friendships;
DROP TABLE IF EXISTS films_genres;
DROP TABLE IF EXISTS reviews_rate;
DROP TABLE IF EXISTS reviews;
DROP TABLE IF EXISTS events;
DROP TABLE IF EXISTS users;
DROP TABLE IF EXISTS directors;
DROP TABLE IF EXISTS films;

CREATE TABLE IF NOT EXISTS users
(
    id       INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name     VARCHAR(100) NOT NULL,
    email    VARCHAR(100) NOT NULL,
    login    VARCHAR(100) NOT NULL,
    birthday DATE
);

CREATE TABLE IF NOT EXISTS friendships
(
    status   BOOLEAN DEFAULT FALSE,
    user1_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    user2_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    PRIMARY KEY (user1_id, user2_id)
);

CREATE TABLE IF NOT EXISTS mpa
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS films
(
    id           INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name         VARCHAR(100) NOT NULL,
    description  VARCHAR(500),
    release_date DATE,
    duration     INTEGER,
    mpa_id       INTEGER REFERENCES mpa (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS genres
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);
CREATE TABLE IF NOT EXISTS directors
(
    id   INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR(100) NOT NULL
);

CREATE TABLE IF NOT EXISTS films_users
(
    user_id INTEGER REFERENCES users (id) ON DELETE CASCADE,
    film_id INTEGER REFERENCES films (id) ON DELETE CASCADE,
    PRIMARY KEY (user_id, film_id)
);

CREATE TABLE IF NOT EXISTS films_genres
(
    film_id  INTEGER REFERENCES films (id) ON DELETE CASCADE,
    genre_id INTEGER REFERENCES genres (id) ON DELETE CASCADE,
    PRIMARY KEY (genre_id, film_id)
);

CREATE TABLE IF NOT EXISTS films_directors
(
    film_id     INTEGER REFERENCES films (id) ON DELETE CASCADE,
    director_id INTEGER REFERENCES directors (id) ON DELETE CASCADE,
    PRIMARY KEY (director_id, film_id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    id          INTEGER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    content     VARCHAR(200),
    is_positive BOOLEAN,
    user_Id     INTEGER REFERENCES users (id) ON DELETE CASCADE,
    film_Id     INTEGER REFERENCES films (id) ON DELETE CASCADE
);

CREATE TABLE IF NOT EXISTS reviews_rate
(
    user_id   INTEGER REFERENCES users (id) ON DELETE CASCADE,
    review_id INTEGER REFERENCES reviews (id) ON DELETE CASCADE,
    rate      BOOLEAN,
    PRIMARY KEY (user_id, review_id)
);

CREATE TABLE IF NOT EXISTS events
(
    ID         BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID    INTEGER REFERENCES users (id) ON DELETE CASCADE,
    OPERATION  ENUM ('REMOVE', 'ADD', 'UPDATE'),
    EVENT_TYPE ENUM ('LIKE', 'REVIEW', 'FRIEND'),
    ENTITY_ID  INTEGER,
    TIMESTAMP  TIMESTAMP DEFAULT LOCALTIMESTAMP
);